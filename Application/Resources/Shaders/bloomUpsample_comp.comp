#version 450

#include "bloomUpsample_bindings.h"

layout(set = RESULT_IMAGE_SET, binding = RESULT_IMAGE_BINDING, r11f_g11f_b10f) uniform writeonly image2D uResultImage;
layout(set = INPUT_IMAGE_SET, binding = INPUT_IMAGE_BINDING) uniform sampler2D uInputImage;
layout(set = PREV_RESULT_IMAGE_SET, binding = PREV_RESULT_IMAGE_BINDING) uniform sampler2D uPrevResultImage;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(push_constant) uniform PUSH_CONSTS 
{
	PushConsts uPushConsts;
};

void main() 
{
	if (gl_GlobalInvocationID.x < uPushConsts.width && gl_GlobalInvocationID.y < uPushConsts.height)
	{
		const vec2 texelSize = uPushConsts.texelSize;
		const vec2 texCoord = vec2(vec2(gl_GlobalInvocationID.xy) + 0.5) * texelSize;
		
		const float radius = 1.7;
		
		vec3 sum = vec3(0.0);
		
		sum += 1.0 * textureLod(uInputImage, texCoord + vec2(-texelSize.x, -texelSize.y) * radius, 0.0).rgb;
		sum += 2.0 * textureLod(uInputImage, texCoord + vec2( 0.0,         -texelSize.y) * radius, 0.0).rgb;
		sum += 1.0 * textureLod(uInputImage, texCoord + vec2( texelSize.x, -texelSize.y) * radius, 0.0).rgb;
		
		sum += 2.0 * textureLod(uInputImage, texCoord + vec2(-texelSize.x,          0.0) * radius, 0.0).rgb;
		sum += 4.0 * textureLod(uInputImage, texCoord,                                             0.0).rgb;
		sum += 2.0 * textureLod(uInputImage, texCoord + vec2( texelSize.x,          0.0) * radius, 0.0).rgb;
		
		sum += 1.0 * textureLod(uInputImage, texCoord + vec2(-texelSize.x,  texelSize.y) * radius, 0.0).rgb;
		sum += 2.0 * textureLod(uInputImage, texCoord + vec2( 0.0,          texelSize.y) * radius, 0.0).rgb;
		sum += 1.0 * textureLod(uInputImage, texCoord + vec2( texelSize.x,  texelSize.y) * radius, 0.0).rgb;
	
		sum *= (1.0 / 16.0);
	
		if (uPushConsts.addPrevious != 0)
		{
			sum += textureLod(uPrevResultImage, texCoord, 0.0).rgb;
		}
		
		imageStore(uResultImage, ivec2(gl_GlobalInvocationID.xy), vec4(sum, 1.0));
	}
}