#version 450

layout(set = 0, binding = 0, rg16f) uniform image2D uVelocityImage;
layout(set = 0, binding = 1) uniform sampler2D uDepthImage;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(push_constant) uniform PushConsts 
{
	mat4 reprojectionMatrix;
	vec2 texelSize;
} uPushConsts;

void main() 
{
	// get current and previous frame's pixel position
	vec2 currentUV = vec2(vec2(gl_GlobalInvocationID.xy) + 0.5) * uPushConsts.texelSize;
	float depth = texelFetch(uDepthImage, ivec2(gl_GlobalInvocationID.xy), 0).x;
	vec4 reprojectedPos = uPushConsts.reprojectionMatrix * vec4(currentUV * 2.0 - 1.0, depth, 1.0);
	vec2 previousUV = (reprojectedPos.xy / reprojectedPos.w) * 0.5 + 0.5;

	// calculate delta caused by camera movement
	vec2 cameraVelocity = currentUV - previousUV;
	
	ivec2 iCoord = ivec2(gl_GlobalInvocationID.xy);
	vec2 dynamicVelocity = imageLoad(uVelocityImage, iCoord).xy;
	
	// add dynamic and camera velocity
	imageStore(uVelocityImage, iCoord, vec4(dynamicVelocity + cameraVelocity, 1.0, 1.0));
}