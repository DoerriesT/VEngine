#version 450

#include "gtaoSpatialFilter_bindings.h"

layout(set = INPUT_IMAGE_SET, binding = INPUT_IMAGE_BINDING) uniform texture2D uInputImage;
layout(set = RESULT_IMAGE_SET, binding = RESULT_IMAGE_BINDING) uniform writeonly image2D uResultImage;
layout(set = POINT_SAMPLER_SET, binding = POINT_SAMPLER_BINDING) uniform sampler uPointSampler;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main() 
{
	vec2 texelSize = 1.0 / vec2(textureSize(sampler2D(uInputImage, uPointSampler), 0).xy);
	vec2 texCoord = (vec2(gl_GlobalInvocationID.xy) + vec2(0.5)) * texelSize;
	vec2 center = textureLod(sampler2D(uInputImage, uPointSampler), texCoord, 0).xy;
	float rampMaxInv = 1.0 / (center.y * 0.1);
	
	float totalAo = 0.0;
	float totalWeight = 0.0;
	
	int offset = 0;//uFrame % 2;
	for (int i = -1 - offset; i < 3 - offset; ++i)
	{
		for(int j = -2 + offset; j < 2 + offset; ++j)
		{
			vec2 S = textureLod(sampler2D(uInputImage, uPointSampler), texelSize * vec2(i, j) + texCoord, 0).xy;
			float weight = clamp(1.0 - (abs(S.y - center.y) * rampMaxInv), 0.0, 1.0);
			totalAo += S.x * weight;
			totalWeight += weight;
		}
	}
	
	float ao = totalAo / totalWeight;
	
	imageStore(uResultImage, ivec2(gl_GlobalInvocationID.xy), vec4(ao, center.y, 0.0, 0.0));
}